name: CI/CD for EC-CUBE4 Plugin
on: [workflow_dispatch, pull_request]
jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        eccube-versions: ['4.0','4.1-beta2']
        php-versions: [7.1,7.2,7.3,7.4]
        database: [mysql, pgsql]
        include:
          - database: mysql
            database_url: mysql://root:root@127.0.0.1:3306/eccube_db
            database_server_version: 5
          - database: pgsql
            database_url: postgres://postgres:password@127.0.0.1:5432/eccube_db
            database_server_version: 11

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: eccube_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eccube_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout EC-CUBE
        uses: actions/checkout@v2
        with:
          repository: EC-CUBE/ec-cube
          ref: ${{ matrix.eccube-versions }}

      - name: Setup PHP, with composer v1 and extensions
        if: matrix.eccube-versions == '4.0'
        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, mysql, intl
          tools: composer:v1

      - name: Setup PHP, with composer and extensions
        if: matrix.eccube-versions != '4.0'
        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, mysql, intl
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run : |
          composer install --no-progress --prefer-dist --optimize-autoloader
          composer require stripe/stripe-php

      - name: Install Composer dependencies for EC-CUBE4.0
        if: matrix.eccube-versions == '4.0'
        run: |
          composer require --dev kiy0taka/eccube4-test-fixer

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: app/Plugin/${{ github.event.repository.name }}

      - name: Setup EC-CUBE and Plugin
        run: |
          composer compile
          bin/console eccube:plugin:install --code ${{ github.event.repository.name }}
          bin/console cache:clear --no-warmup
          bin/console eccube:plugin:enable --code ${{ github.event.repository.name }}
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Run Tests for EC-CUBE4.0
        if: matrix.eccube-versions == '4.0'
        run: |
          find app/Plugin/${{ github.event.repository.name }}/Tests -name "*Test.php" | while read TESTCASE
          do
            bin/phpunit --include-path vendor/kiy0taka/eccube4-test-fixer/src --loader 'Eccube\PHPUnit\Loader\Eccube4CompatTestSuiteLoader' ${TESTCASE}
          done
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Run Tests
        if: matrix.eccube-versions != '4.0'
        run: |
          bin/phpunit app/Plugin/${{ github.event.repository.name }}/Tests
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Update Plugin
        run: |
          bin/console eccube:plugin:update ${{ github.event.repository.name }}
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Uninstall Plugin
        run: |
          bin/console eccube:plugin:uninstall --code=${{ github.event.repository.name }}
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
